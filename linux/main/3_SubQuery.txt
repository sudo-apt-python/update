CREATE TABLE Employee (
    employee_name VARCHAR(50),
    street VARCHAR(100),
    city VARCHAR(50),
    Id INT,
    Mobile_no VARCHAR(20),
    PRIMARY KEY (employee_name)
);

CREATE TABLE Works (
    employee_name VARCHAR(50),
    company_name VARCHAR(50),
    salary DECIMAL(10, 2),
    PRIMARY KEY (employee_name, company_name),
    FOREIGN KEY (employee_name) REFERENCES Employee(employee_name)
);

CREATE TABLE Company (
    company_name VARCHAR(50),
    city VARCHAR(50),
    PRIMARY KEY (company_name)
);

CREATE TABLE Manages (
    employee_name VARCHAR(50),
    manager_name VARCHAR(50),
    PRIMARY KEY (employee_name),
    FOREIGN KEY (employee_name) REFERENCES Employee(employee_name),
    FOREIGN KEY (manager_name) REFERENCES Employee(employee_name)
);


-- Inserting into the Employee table
INSERT INTO Employee (employee_name, street, city, Id, "Mobile no")
VALUES ('John Doe', '123 Main St', 'New York', 1, '1234567890');

-- Inserting into the Works table
INSERT INTO Works (employee_name, company_name, salary)
VALUES ('John Doe', 'ABC Company', 5000);

-- Inserting into the Company table
INSERT INTO Company (company_name, city)
VALUES ('ABC Company', 'New York');

-- Inserting into the Manages table
INSERT INTO Manages (employee_name, manager_name)
VALUES ('John Doe', 'Manager A');

SELECT e.employee_name, w.company_name, c.city
FROM Employee e
JOIN Works w ON e.employee_name = w.employee_name
JOIN Company c ON w.company_name = c.company_name;


-- Inner Join
SELECT Employee.employee_name, Works.company_name, Works.salary
FROM Employee
INNER JOIN Works ON Employee.employee_name = Works.employee_name;

-- Left Join
SELECT Employee.employee_name, Works.company_name, Works.salary
FROM Employee
LEFT JOIN Works ON Employee.employee_name = Works.employee_name;

-- Right Join
SELECT Employee.employee_name, Works.company_name, Works.salary
FROM Employee
RIGHT JOIN Works ON Employee.employee_name = Works.employee_name;

-- Full Outer Join (not supported in all databases)
SELECT Employee.employee_name, Works.company_name, Works.salary
FROM Employee
FULL OUTER JOIN Works ON Employee.employee_name = Works.employee_name;



SELECT employee_name, salary
FROM Works
WHERE salary > (SELECT AVG(salary) FROM Works);


CREATE VIEW EmployeeManagers AS
SELECT e.employee_name, m.manager_name
FROM Employee e
JOIN Manages m ON e.employee_name = m.employee_name;


CREATE VIEW EmployeeView AS
SELECT e.employee_name, e.street, e.city, e.Id, e.Mobile_no, w.company_name, w.salary, c.city AS company_city, m.manager_name
FROM Employee e
LEFT JOIN Works w ON e.employee_name = w.employee_name
LEFT JOIN Company c ON w.company_name = c.company_name
LEFT JOIN Manages m ON e.employee_name = m.employee_name;

SELECT * FROM EmployeeView;
